{
    "collab_server" : "",
    "contents" : "\n\n#' @title Get list of available hydrometric stations with near real-time data\n#' @description Gets the current list of hydrometric gauges available in \n#'  near real-time (within 6 hours) from the National Hydrological Service, \n#'  Environment and Climate Change Canada.\n#' @param base_url Base URL to access data mart documentation\n#' @param master_file Filename containing the list of available real-time stations \n#' @return A data frame (station_number, name, latitude, longitude, prov_terr_loc, timezone)\n#' @examples\n#' network <- RealTimeNetwork()\n#' # show top 50 stations \n#' head(network, 50)\n#' @seealso \\code{\\link{RealTimeData}}\n#' @export\nRealTimeNetwork <- function(base_url = \"http://dd.weather.gc.ca/hydrometric/doc\", \n                            master_file = \"hydrometric_StationList.csv\") {\n  infile <- sprintf(\"%s/%s\", base_url, master_file)\n  data <- read.table(infile, sep=\",\", header=TRUE, stringsAsFactors=FALSE)\n  colnames(data) <- c(\"station_number\", \"name\", \"latitude\", \"longitude\",\n                      \"prov_terr_loc\", \"timezone\")\n  return(data)\n}\n\n#' @title Gets current available data for hydrometric station  \n#' @description Gets near real-time (within 6 hours) hydrometric data for the \n#'  past 30 days for a particular hydrometric station operated by the National \n#'  Hydrological Service of Canada, Water Survey Division.\n#' @param base_url Base URL to access the data mart\n#' @param prov_terr_loc Two-digit provincial or territorial abbreviation in which \n#' the station is located\n#'  (e.g., \"BC\")\n#' @param station_number A seven-digit station identifier (e.g., \"08MF005\")\n#' @seealso \\code{\\link{RealTimeNetwork}} \n#' @return A data frame (station_number, date_time, hg, hg_grade, hg_sym, hg_code,\n#'  qr, qr_grade, qr_sym, qr_code)\n#' @note Returned date/times are in Universal Time Coordinated (UTC). \n#' @examples\n#' # get realtime data for Fraser River at Hope (08MF005)\n#' data <- RealTimeData(prov_terr_loc=\"BC\", station_number=\"08MF005\")\n#' plot(\n#'   data$date_time, data$qr,\n#'\t type=\"l\", col=\"blue\",\n#'   xlab=\"DateTime [UTC]\", ylab=\"Discharge\")\n#' @export\nRealTimeData <- function(base_url = \"http://dd.weather.gc.ca/hydrometric\", prov_terr_loc, \n                         station_number) {\n  # build URL\n  type <- c(\"hourly\", \"daily\")\n  url <- sprintf(\"%s/csv/%s/%s\", base_url, prov_terr_loc, type)\n  infile <- sprintf(\"%s/%s_%s_%s_hydrometric.csv\", url, prov_terr_loc, station_number, type)\n  \n  # define data frame column names - they are not returned\n  # nicely from the data mart files\n  colHeaders <- c(\"station_number\", \"date_time\", \"hg\", \"hg_grade\", \"hg_sym\", \"hg_code\",\n                  \"qr\", \"qr_grade\", \"qr_sym\", \"qr_code\")\n\n  # get hourly file\n  h <- try(read.table(infile[1], header=TRUE, sep=\",\", stringsAsFactors=FALSE))\n \n  if(class(h)==\"try-error\") {\n    stop(sprintf(\"Station [%s] cannot be found within Province/Territory [%s]...url not located %s\",\n                 station_number, prov_terr_loc, infile[1]))\n  }\n  colnames(h) <- colHeaders\n  h$date_time <- gsub(\"([+-]\\\\d\\\\d)(:)\",\"\\\\1\", h$date_time)\n  h$date_time <- strptime(h$date_time, \"%FT%T%z\", tz=\"UTC\")\n  \n  # get daily file\n  d <- try(read.table(infile[2], header=TRUE, sep=\",\", stringsAsFactors=FALSE))\n  colnames(d) <- colHeaders\n  d$date_time <- gsub(\"([+-]\\\\d\\\\d)(:)\",\"\\\\1\", d$date_time)\n  d$date_time <- strptime(d$date_time, \"%FT%T%z\", tz=\"UTC\")\n  \n  # now merge the hourly + daily (hourly data overwrites daily where dates are the same)\n  p <- which(d$date_time < min(h$date_time))\n  output <- rbind(d[p,], h)\n  return(output)\n}\n\n",
    "created" : 1477368425044.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "248007504",
    "id" : "4A54CEEF",
    "lastKnownWriteTime" : 1484535646,
    "last_content_update" : 1484535646545,
    "path" : "~/Documents/PACKAGES/HYDAT/R/Real_Time_Data.r",
    "project_path" : "R/Real_Time_Data.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}